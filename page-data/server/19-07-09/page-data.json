{"componentChunkName":"component---src-templates-post-js","path":"/server/19-07-09/","result":{"data":{"markdownRemark":{"html":"<p> 처음 node.js를 배우게 된 계기는 자바스크립트 언어를 사용하여 프론트엔드, 백엔드, 그리고 서버 구축까지 모두 할 수 있다는 장점 때문이었습니다. 그래서 서버를 구축하는 과정에 있어서도 당연히 Node.js 만으로 안정적으로 서버를 구축 할 수 있겠다고 생각하였는데 서버 관련 공부를 하면 할 수록 Node.js 만으로 서버를 구축하면 위험할 수 있다는 인터넷 글들을 접하곤 했습니다. 웹 프로그래밍 공부를 시작한지 반 년 밖에 되지 않은 저로써는 어떤 방법이 지금의 내 상황에 적절한지에 대해 고민을 하게 되었고, 일단은 다양한 사람들의 의견을 모두 정리한 뒤에 내 상황에 맞게 선택 해야겠다는 생각이 들어 이렇게 포스팅으로 정리를 하게 되었습니다.  </p>\n<p> 포스팅 내용과 관련되어 있는 기본적인 단어를 아래에 정리 해 보았습니다. </p>\n<ul>\n<li>웹 서버: 클라이언트가 서버에 페이지 요청을 하면 요청을 받아 <strong>정적 컨텐츠</strong>를 제공. 클라이언트의 요청에 대해 가장 앞에서 처리한다.</li>\n<li>WAS: 주로 <strong>동적 콘텐츠</strong>를 제공하기 위해 만들어진 Web Application Server.</li>\n<li><strong>리버스 프록시</strong>: 내부 어플리케이션과 외부 클라이언트 사이에 자리잡아서 클라이언트의 요청을 적절한 서버로 보내주는 역할을 한다. 많은 어플리케이션들이 자체적으로 가지지 못한 로드 밸런싱, 보안, 가속화 기능 등 기능을 갖고 있다.</li>\n</ul>\n<h3 id=\"nodejs와-apache-nginx를-같이-사용해야-할까\" style=\"position:relative;\"><a href=\"#nodejs%EC%99%80-apache-nginx%EB%A5%BC-%EA%B0%99%EC%9D%B4-%EC%82%AC%EC%9A%A9%ED%95%B4%EC%95%BC-%ED%95%A0%EA%B9%8C\" aria-label=\"nodejs와 apache nginx를 같이 사용해야 할까 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Node.js와 Apache, Nginx를 같이 사용해야 할까?</h3>\n<p> Node.js와 apache, nginx를 연동하여 사용하는 개발자들은 apache, nginx를 리버스 프록시 서버의 역할로 연동하여 사용한다고 합니다. 저는 먼저 프록시 서버를 이용하는 이유에 대해서 조사 해 보았습니다. Proxy는 프록시 서버를 통해서 다른 네트워크에 간접적으로 접속할 수 있도록 해줍니다. 일단 프록시 서버를 도입하면, 익명의 사용자가 서버에 접근할 때 직접적이지 않고 한 단계를 더 거쳐야 하므로 <strong>보안적으로 우세</strong>합니다. 또한, 사용자의 요청을 cache의 형태로 가지고 있기 때문에 동일한 요청이 오면 더욱 빠르게 응답을 해줘 <strong>속도도 우세</strong>하며, 불필요한 <strong>리소스 낭비</strong>를 막습니다. 이외에도 <a href=\"https://ko.wikipedia.org/wiki/%EC%A0%91%EA%B7%BC_%EC%A0%9C%EC%96%B4_%EB%AA%A9%EB%A1%9D\">ACL</a>과 <strong>접근자 레포팅</strong> 등 다양한 측면에서 장점을 가지고 있다고 합니다. 쉽게 말하면 '보안에 강하고, 성능과 비용 측면에서도 이득'을 볼 수 있습니다.</p>\n<p> 특히 프록시 서버 중 리버스 프록시는 사용자가 실제 서버의 정보를 알지 못한다는 장점이 있습니다. 포워드 프록시는 클라이언트에서 요청을 실제 서버에 요청하여 데이터를 가져오지만, 리버스 프록시는 클라이언트 요청을 리버스 프록시 서버가 받아 배후의 사용자가 알지 못하는 서버에서 데이터를 가져오게 됩니다. <strong>Node Express에서 사용하는 실제 포트</strong>를 <strong>Nginx의 80포트 Proxy서버로 숨김</strong>으로써 보안을 강화 할 수 있게 된다고 합니다.</p>\n<p> 얕게 알게 된 정도이지만 생각을 적어보자면, 학습이나 실습용으로 여러 사용자가 이용하지 않는 자신이나 소수의 사람들만 사용하는 저용량 웹 애플리케이션을 만들기 위해서는 그저 Node.js만 사용해도 상관없을 것 같고, 여러 사용자가 접속해서 그 사용자들이 데이터를 생성하고 수정하는 정도의 웹 어플리케이션이라면 혹시 모를 보안 이슈를 위해서 리버스 프록시를 node.js와 연동하여 서버를 구축하는게 좋을 것 같다는 생각이 듭니다. (제 생각과 관련해서 보완/수정 해 줄 내용이 있다면 댓글 부탁드립니다!)</p>\n<p> 물론 요즘은 node의 보안 수준이 어느정도 높아져서 node만으로 서버를 운영하기에 충분하다는 의견도 있습니다만, node.js로 서버를 구축하는 경우에는 그에 알맞은 보안 방법을 찾아서 최신 버전을 항상 서버에 적용하는 것을 잊지 말아야 합니다. 그리고 apache와 nginx는 어떤 차이가 있는지에 대해서는 <a href=\"https://taetaetae.github.io/2018/06/27/apache-vs-nginx/\">여기</a>에 잘 설명되어 있어서, 저는 이 분의 글을 참고하여 공부하였습니다.</p>\n<h3 id=\"nodejs---nginx-연동-방법\" style=\"position:relative;\"><a href=\"#nodejs---nginx-%EC%97%B0%EB%8F%99-%EB%B0%A9%EB%B2%95\" aria-label=\"nodejs   nginx 연동 방법 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Node.js - nginx 연동 방법</h3>\n<p> 이에 대해서는 쉽고 깔끔하게 정리 해 준 포스팅들이 많이 있어서 아래에 링크를 걸어보았습니다. </p>\n<ul>\n<li><a href=\"https://cheese10yun.github.io/Node-AWS-Nginx/\">AWS EC2 Nginx Node.js 설정</a></li>\n<li><a href=\"https://velog.io/@jakeseo_me/Node%EC%97%90%EC%84%9C-NGINX%EB%A5%BC-%EB%A6%AC%EB%B2%84%EC%8A%A4-%ED%94%84%EB%A1%9D%EC%8B%9C%EB%A1%9C-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0-%EB%B2%88%EC%97%AD\">Node js에 관한 것 아무거나 3편, Node에서 NGINX를 리버스 프록시로 사용하기 (번역)</a></li>\n<li><a href=\"https://junojunho.com/front-end/aws-nginx-express\">주노준호 블로그: AWS EC2 + NginX + Nodejs Express</a></li>\n</ul>\n<p> 저는 서버구축 실습을 위해 '<a href=\"https://cheese10yun.github.io/Node-AWS-Nginx/\">윤 블로그</a>'님의 포스팅을 참고하였습니다.</p>","tableOfContents":"<ul>\n<li><a href=\"/Web/19-07-09-Node.js%EC%99%80%20Apache,%20Nginx%EB%A5%BC%20%EA%B0%99%EC%9D%B4%20%EC%82%AC%EC%9A%A9%ED%95%B4%EC%95%BC%20%ED%95%A0%EA%B9%8C?/#nodejs%EC%99%80-apache-nginx%EB%A5%BC-%EA%B0%99%EC%9D%B4-%EC%82%AC%EC%9A%A9%ED%95%B4%EC%95%BC-%ED%95%A0%EA%B9%8C\">Node.js와 Apache, Nginx를 같이 사용해야 할까?</a></li>\n<li><a href=\"/Web/19-07-09-Node.js%EC%99%80%20Apache,%20Nginx%EB%A5%BC%20%EA%B0%99%EC%9D%B4%20%EC%82%AC%EC%9A%A9%ED%95%B4%EC%95%BC%20%ED%95%A0%EA%B9%8C?/#nodejs---nginx-%EC%97%B0%EB%8F%99-%EB%B0%A9%EB%B2%95\">Node.js - nginx 연동 방법</a></li>\n</ul>","frontmatter":{"path":"/server/19-07-09/","title":"Node.js와 Apache, Nginx를 같이 사용해야 할까?","category":"Server","date":"2019-07-09"}}},"pageContext":{}},"staticQueryHashes":["2390655019","256249292","63159454"]}