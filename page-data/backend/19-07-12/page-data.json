{"componentChunkName":"component---src-templates-post-js","path":"/backend/19-07-12/","result":{"data":{"markdownRemark":{"html":"<p>Express-generator로 생성한 웹 애플리케이션 프로젝트의 app.js 파일을 살펴보면 40줄 정도의 코드가 있습니다. 오늘은 이 코드들이 각각 무엇을 의미하는 지에 대해 공부 해 보도록 하겠습니다. 일단 먼저 아래에 app.js 파일의 소스코드를 첨부하였습니다. </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> createError <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'http-errors'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> express <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'express'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> cookieParser <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'cookie-parser'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> logger <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'morgan'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> indexRouter <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./routes/index'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> usersRouter <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./routes/users'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> app <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// view engine setup</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'views'</span><span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'views'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'view engine'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'jade'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token function\">logger</span><span class=\"token punctuation\">(</span><span class=\"token string\">'dev'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>express<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>express<span class=\"token punctuation\">.</span><span class=\"token function\">urlencoded</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> extended<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token function\">cookieParser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>express<span class=\"token punctuation\">.</span><span class=\"token function\">static</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'public'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> indexRouter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/users'</span><span class=\"token punctuation\">,</span> usersRouter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// catch 404 and forward to error handler</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token function\">createError</span><span class=\"token punctuation\">(</span><span class=\"token number\">404</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// error handler</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// set locals, only providing error in development</span>\n  res<span class=\"token punctuation\">.</span>locals<span class=\"token punctuation\">.</span>message <span class=\"token operator\">=</span> err<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">;</span>\n  res<span class=\"token punctuation\">.</span>locals<span class=\"token punctuation\">.</span>error <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'env'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">'development'</span> <span class=\"token operator\">?</span> err <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// render the error page</span>\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">.</span>status <span class=\"token operator\">||</span> <span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token string\">'error'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> app<span class=\"token punctuation\">;</span></code></pre></div>\n<p> 위의 코드를 <strong>모듈 선언, 서버 설정, 미들웨어 등록</strong> 크게 세 파트로 나누어 살펴봅시다.</p>\n<h3>모듈 선언</h3>\n<ul>\n<li><code class=\"language-text\">var createError = require(&#39;http-errors&#39;)</code>: 에러에 대한 처리 <a href=\"https://www.npmjs.com/package/http-errors\">모듈</a> </li>\n<li><code class=\"language-text\">var path = require(&#39;path&#39;)</code>: 경로와 관련된 <a href=\"http://chromeextension.kr/2016/08/node-js-path/\">모듈</a>. 예를 들어 path.join(path1, path2…) 의 경우, 파라미터로 전달받은 경로를 이어서 하나의 경로로 만듭니다.</li>\n<li><code class=\"language-text\">var cookieParser = require(&#39;cookie-parser&#39;)</code>: req, res 객체에 cookies 프로퍼티와 cookie() 메소드를 추가하는 모듈</li>\n<li><code class=\"language-text\">var logger = require(&#39;morgan&#39;)</code>: 로그 기록을 남기는 <a href=\"https://www.npmjs.com/package/morgan\">모듈</a>. 예를 들어 app.use(logger('dev')) 의 경우, 서버에 접속을 시도하면 그에 대한 정보가 남습니다. </li>\n<li><code class=\"language-text\">var indexRouter = require(&#39;./routes/index&#39;)</code>: HTTP GET / 요청에 대한 작업 처리 모듈</li>\n<li><code class=\"language-text\">var usersRouter = require(&#39;./routes/users&#39;)</code>: HTTP GET /users 요청에 대한 작업 처리 모듈</li>\n</ul>\n<h3>환경 설정</h3>\n<p>__dirname 은 <strong>현재 파일의 위치</strong>를 의미합니다. 즉, app.js의 위치를 말합니다. 그래서 <code class=\"language-text\">path.join(__dirname, &#39;views&#39;)</code> 결과는 <strong>'현재 디렉토리/views'</strong> 라는 경로입니다. </p>\n<ul>\n<li><code class=\"language-text\">app.set(&#39;views&#39;, path.join(__dirname, &#39;views&#39;))</code>: 기본 views 폴더를 path.join(__dirname, 'views') 로 설정</li>\n<li><code class=\"language-text\">app.set(&#39;view engine&#39;, &#39;jade&#39;)</code>: 기본 템플릿 엔진은 jade 형식으로 설정</li>\n</ul>\n<h3>미들웨어 등록</h3>\n<ul>\n<li><code class=\"language-text\">app.use(logger(&#39;dev&#39;))</code>: 서버에 접속을 시도하면 로그 남김</li>\n<li><code class=\"language-text\">app.use(express.json())</code>: json 형태의 http request body를 파싱</li>\n<li><code class=\"language-text\">app.use(express.urlencoded({ extended: false }))</code>: 영어가 아닌 (예를 들어 한글) url 을 인코딩</li>\n<li><code class=\"language-text\">app.use(cookieParser())</code>: req, res 객체에 cookies 프로퍼티와 cookie() 메소드를 추가</li>\n<li><code class=\"language-text\">app.use(express.static(path.join(__dirname, &#39;public&#39;)))</code>: path.join(__dirname, 'public') 내용을 웹 서버 루트 폴더에 업로드</li>\n<li><code class=\"language-text\">app.use(&#39;/&#39;, indexRouter)</code>: HTTP GET / 요청에 대한 작업 처리</li>\n<li><code class=\"language-text\">app.use(&#39;/users&#39;, usersRouter)</code>: HTTP GET /users 요청에 대한 작업 처리</li>\n</ul>\n<p>나머지 제일 아래의 코드들은 에러 핸들링과 관련된 코드 들입니다.</p>","frontmatter":{"path":"/backend/19-07-12/","title":"Express-generator로 생성된 app.js 파일 알아보기","category":"BackEnd","date":"2019-07-12"}}},"pageContext":{}},"staticQueryHashes":["2390655019","256249292","63159454"]}