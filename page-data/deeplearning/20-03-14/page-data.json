{"componentChunkName":"component---src-templates-post-js","path":"/deeplearning/20-03-14/","result":{"data":{"markdownRemark":{"html":"<p>딥러닝을 통해 이미지 데이터를 다루려고 할 때, 이미지 데이터의 file format에 따른 mode에 대해 이해하고 있으면 유용합니다. 이번 포스팅에서는 자주 사용되는 이미지 데이터 파일의 format과 mode에 대해 알아보도록 하겠습니다.</p>\n<h3 id=\"modes\" style=\"position:relative;\"><a href=\"#modes\" aria-label=\"modes permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Modes</h3>\n<p> mode가 무엇인지에 대한 설명은 <a href=\"https://pillow.readthedocs.io/en/4.1.x/handbook/concepts.html#modes\">pillow document</a>에 잘 나와있습니다.</p>\n<p> \"The mode of an image defines the type and depth of a pixel in the image. The current release supports the following standard modes\"라고 pillow document는 설명하고 있는데, 이미지의 타입이나 픽셀에 어떤 정보가 담기는지 정의하는 것을 mode라고 생각하시면 됩니다. 아래에 현재 사용되고 있는 mode들을 나열해 보았습니다.</p>\n<ul>\n<li>1 (1-bit pixels, black and white, stored with one pixel per byte)</li>\n<li>L (8-bit pixels, black and white, grayscale)</li>\n<li>P (8-bit pixels, mapped to any other mode using a color palette)</li>\n<li>RGB (3x8-bit pixels, true color, Red-Green-Blue)</li>\n<li>RGBA (4x8-bit pixels, true color with transparency mask)</li>\n<li>CMYK (4x8-bit pixels, color separation)</li>\n<li>YCbCr (3x8-bit pixels, color video format)</li>\n<li>LAB (3x8-bit pixels, the Lab color space)</li>\n<li>HSV (3x8-bit pixels, Hue, Saturation, Value color space)</li>\n<li>I (32-bit signed integer pixels)</li>\n<li>F (32-bit floating point pixels)</li>\n</ul>\n<p> 이 중 우리가 자주 사용하게 될 이미지의 mode는 L, RGB, RGBA 입니다. <strong>L은 grayscale</strong> 즉, 흰색에서 검정색 사이의 값을 갖는 mode, <strong>RGB는 red green blue</strong> 값을 갖는 mode, <strong>RGBA는</strong> <strong>red green blue 값과 투명도를 나타내는 alpha</strong> 값을 갖는 mode입니다.</p>\n<h3 id=\"image-file-formats\" style=\"position:relative;\"><a href=\"#image-file-formats\" aria-label=\"image file formats permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Image file formats</h3>\n<p> 대중적으로 많이 사용되는 이미지 파일 데이터의 포맷은 JPEG와 PNG가 있습니다. <a href=\"http://%20https//pillow.readthedocs.io/en/5.1.x/handbook/image-file-formats.html*\">Pillow document</a>의 설명에 따르면 <strong>JPEG 파일은</strong> <strong>L,</strong> <strong>RGB,</strong> <strong>CMYK</strong> mode를 갖고, <strong>PNG 파일은 1,</strong> <strong>L,</strong> <strong>P,</strong> <strong>RGB,</strong> <strong>RGBA</strong> mode를 가질 수 있습니다. </p>\n<p>만약 우리가  L, RGB, RGBA mode를 갖는 JPEG이나 PNG 이미지 파일을 파이썬에서 array 형태로 받아 사용하려면 이 mode들이 array에 어떻게 담기는지 알고있어야 합니다. 이에 대한 설명은 <a href=\"https://stackoverflow.com/questions/51923503/why-do-some-images-have-third-dimension-3-while-others-have-4\">stackoveflow</a>의 질문에서 좋은 답변을 얻을 수 있었습니다. </p>\n<ul>\n<li><a href=\"https://en.wikipedia.org/wiki/RGB_color_model\">RGB</a> (of dimension (m, n, 3)): three channels</li>\n<li><a href=\"https://en.wikipedia.org/wiki/RGBA_color_space\">RGB-A</a> (of dimension (m, n, 4)): four channels</li>\n<li><a href=\"https://en.wikipedia.org/wiki/Grayscale\">Grayscale</a> (of dimension (m, n)): single channel</li>\n</ul>\n<p> m x n 의 size를 가진 이미지 dog.png, fish.png, lena.png가 있다고 가정을 하고 각각 RGB mode, RGBA mode, Grayscale mode를 갖는다고 하면 그에 따른 코드 결과는 아래와 같이 출력됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> PIL <span class=\"token keyword\">import</span> Image\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n\n<span class=\"token operator\">/</span><span class=\"token operator\">*</span> RGB mode <span class=\"token operator\">*</span><span class=\"token operator\">/</span>\ndog <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'dog.png'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Dog shape is '</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>dog<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token operator\">/</span><span class=\"token operator\">*</span> RGB<span class=\"token operator\">-</span>A mode <span class=\"token operator\">*</span><span class=\"token operator\">/</span>\nfish <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fish.png'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Fish shape is '</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>fish<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token operator\">/</span><span class=\"token operator\">*</span> Grayscale mode <span class=\"token operator\">*</span><span class=\"token operator\">/</span>\nlena <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'lena.png'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Lena shape is '</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>lena<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">/</span><span class=\"token operator\">*</span> output <span class=\"token operator\">*</span><span class=\"token operator\">/</span>\n\nDog shape <span class=\"token keyword\">is</span> <span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\nFish shape <span class=\"token keyword\">is</span> <span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\nLena shape <span class=\"token keyword\">is</span> <span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span></code></pre></div>\n<p> RGBA mode를 갖는 이미지 파일을 RGB mode로 변환시키고 싶다면 아래의 코드를 참고하시면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">fish <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fish.png'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Fish RGB-A shape is '</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>fish<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nrgb <span class=\"token operator\">=</span> fish<span class=\"token punctuation\">.</span>convert<span class=\"token punctuation\">(</span><span class=\"token string\">'RGB'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Fish RGB shape is '</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>rgb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">/</span><span class=\"token operator\">*</span> Output <span class=\"token operator\">*</span><span class=\"token operator\">/</span>\n\nFish RGB<span class=\"token operator\">-</span>A shape <span class=\"token keyword\">is</span> <span class=\"token punctuation\">(</span><span class=\"token number\">501</span><span class=\"token punctuation\">,</span> <span class=\"token number\">393</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\nFish RGB shape <span class=\"token keyword\">is</span> <span class=\"token punctuation\">(</span><span class=\"token number\">501</span><span class=\"token punctuation\">,</span> <span class=\"token number\">393</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reference</h3>\n<ul>\n<li>Pillow document: <a href=\"https://pillow.readthedocs.io/en/4.1.x/handbook/concepts.html#modes\">https://pillow.readthedocs.io/en/4.1.x/handbook/concepts.html#modes</a></li>\n<li>Pillow document: <a href=\"https://pillow.readthedocs.io/en/5.1.x/handbook/image-file-formats.html\">https://pillow.readthedocs.io/en/5.1.x/handbook/image-file-formats.html</a></li>\n<li>Stackoverflow: <a href=\"https://stackoverflow.com/questions/51923503/why-do-some-images-have-third-dimension-3-while-others-have-4\">Why do some images have third dimension 3 while others have 4?</a></li>\n<li><a href=\"https://ko.wikipedia.org/wiki/RGBA_%EC%83%89_%EA%B3%B5%EA%B0%84\">위키피디아</a></li>\n</ul>","tableOfContents":"<ul>\n<li><a href=\"/MachineLearning/20-03-14-Image%20data%20modes%20&#x26;%20Image%20file%20formats/#modes\">Modes</a></li>\n<li><a href=\"/MachineLearning/20-03-14-Image%20data%20modes%20&#x26;%20Image%20file%20formats/#image-file-formats\">Image file formats</a></li>\n<li><a href=\"/MachineLearning/20-03-14-Image%20data%20modes%20&#x26;%20Image%20file%20formats/#reference\">Reference</a></li>\n</ul>","frontmatter":{"path":"/deeplearning/20-03-14/","title":"Image data modes & Image file formats","category":"Deep Learning","date":"2020-03-14"}}},"pageContext":{}},"staticQueryHashes":["2390655019","256249292","63159454"]}